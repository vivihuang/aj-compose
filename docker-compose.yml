version: '3.0'
services:
  botfront:
    image: 'botfront/botfront:v0.17.2'
    container_name: botfront-app
    restart: always
    networks:
      - botfront-network
    volumes:
      - './models/:/app/models'
    ports:
      - '8888:3000'
    depends_on:
      - mongo
    env_file:
      - .env
    environment:
      PORT: 3000
  botfront-api:
    image: 'botfront/botfront-api:v0.17.2'
    container_name: botfront-api
    networks:
      - botfront-network
    restart: always
    depends_on:
      - mongo
    ports:
      - '8080:8080'
    env_file:
      - .env
  # rasa:
  #   image: 'botfront/rasa-for-botfront:v1.3.9-bf.1'
  #   container_name: botfront-rasa
  #   networks:
  #     - botfront-network
  #   restart: always
  #   ports:
  #     - '5005:5005'
  #   depends_on:
  #     - botfront-api
  #   volumes:
  #     - './models/:/app/models'
  #   env_file:
  #     - .env
  actions:
    image: 'rasa/rasa-sdk:1.3.2'
    container_name: botfront-actions
    networks:
      - botfront-network
    restart: always
    ports:
      - '5055:5055'
    volumes:
      - './actions:/app/actions'
    command:
      - start
      - '--debug'
      - '--actions'
      - actions
    env_file:
      - .env
  duckling:
    image: 'botfront/duckling:latest'
    container_name: botfront-duckling
    networks:
      - botfront-network
    restart: always
    ports:
      - '8000:8000'
  mongo:
    image: 'mongo:latest'
    container_name: botfront-mongo
    restart: always
    networks:
      - botfront-network
    volumes:
      - './botfront-db:/data/db'
    ports:
      - '27017:27017'
    env_file:
      - .env
networks:
  botfront-network: {}
volumes:
  botfront-db: null
